{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseInstance","firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","fbAuth","firebaseAuth","fbStore","firestore","fbStorage","fireStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","getAuth","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","auth","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","props","editing","setEditing","nweetObj","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","getFirestore","id","attachmentUrl","stgRef","ref","getStorage","deleteObject","toggleEditing","updateDoc","isOwner","autoFocus","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","userObj","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","alt","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","querySnapshot","newArray","docs","map","marginTop","Profile","myNweets","setMyNweets","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","updateProfile","currentUser","refreshUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","user","ind","indexOf","end","substring","onAuthStateChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAoBaA,EAAmBC,IAfT,CACrBC,OAAQC,0CACRC,WAAYD,iCACZE,UAAWF,iBACXG,cAAeH,6BACfI,kBAAmBJ,eACnBK,MAAOL,8CAUIM,EAASC,EACTC,EAAUC,EACVC,EAAYC,E,OCmCVC,EAvDE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAASC,EADX,EACWA,KAAMC,EADjB,EACiBA,MAEJ,UAATD,GACFV,EAASW,GACTC,QAAQC,IAAI,UACM,aAATH,IACTR,EAAYS,GACZC,QAAQC,IAAI,cAIVC,EAAQ,uCAAG,WAAON,GAAP,eAAAO,EAAA,yDACfP,EAAMQ,iBADS,UAITb,EAJS,gCAKEZ,EAAO0B,+BAA+B1B,EAAO2B,UAAWnB,EAAOE,GALjE,OAKXkB,EALW,+CAOE5B,EAAO6B,2BAA2B7B,EAAO2B,UAAWnB,EAAOE,GAP7D,QAOXkB,EAPW,eASbP,QAAQC,IAAI,2BACZD,QAAQC,IAAIM,GAVC,kDAYbb,EAAS,KAAMe,SACfT,QAAQC,IAAI,KAAMQ,SAbL,0DAAH,sDAqBd,OACE,qCACE,uBAAMP,SAAUA,EAAUQ,UAAU,YAApC,UACE,uBAAOZ,KAAK,QAAQa,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACd,MAAOZ,EAAOQ,SAAUA,EAAUe,UAAU,cACzG,uBAAOZ,KAAK,WAAWa,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACd,MAAOV,EAAUM,SAAUA,EAAUe,UAAU,cACtH,uBAAOC,KAAK,SAASZ,MAAOR,EAAa,iBAAmB,SAAUmB,UAAU,yBAC/EjB,GAAS,sBAAMiB,UAAU,YAAhB,SAA6BjB,OAEzC,sBAAMqB,QAZY,WACpBtB,GAAc,SAACuB,GAAD,OAAWA,MAWOL,UAAU,aAAxC,SACGnB,EAAa,SAAW,gB,gBCZlByB,EAlCF,WACX,IAAMC,EAAa,uCAAG,WAAOrB,GAAP,qBAAAO,EAAA,6DACde,EAAOvC,EAAO2B,UAKP,YAHFR,EACPF,EADFC,OAASC,MAKTqB,EAAW,IAAIxC,EAAOyC,mBACJ,WAATtB,IAETqB,EAAW,IAAIxC,EAAO0C,oBAXJ,SAaD1C,EAAO2C,gBAAgBJ,EAAMC,GAb5B,OAadZ,EAbc,OAcpBP,QAAQC,IAAIM,GAdQ,2CAAH,sDAiBnB,OACE,sBAAKG,UAAU,gBAAf,UACE,cAAC,IAAD,CAAiBa,KAAMC,IAAWC,MAAO,UAAWC,KAAK,KAAKC,MAAO,CAACC,aAAc,MACpF,cAAC,EAAD,IACA,sBAAKlB,UAAU,WAAf,UACE,yBAAQI,QAASG,EAAenB,KAAK,SAASY,UAAU,UAAxD,iCAEE,cAAC,IAAD,CAAiBa,KAAMM,SAEzB,yBAAQf,QAASG,EAAenB,KAAK,SAASY,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBa,KAAMO,gB,gBCoCvCC,EAhED,SAACC,GACb,MAA8B9C,oBAAS,GAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACA,EAAgChD,mBAAS8C,EAAMG,SAASC,MAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,4BAAApC,EAAA,0DACTqC,OAAOC,QAAQ,+CADN,gCAGZ5D,EAAQ6D,UAAU7D,EAAQ8D,IAAI9D,EAAQ+D,eAAgB,SAApC,UAAiDZ,EAAMG,SAASU,MAHtE,UAImB,KAAjCb,EAAMG,SAASW,cAJD,uBAKVC,EAAShE,EAAUiE,IAAIjE,EAAUkE,aAAcjB,EAAMG,SAASW,eALpD,SAMV/D,EAAUmE,aAAaH,GANb,2CAAH,qDAUbI,EAAgB,WACpBjB,GAAW,SAACnB,GAAD,OAAWA,MAElBb,EAAQ,uCAAG,WAAON,GAAP,SAAAO,EAAA,6DACfP,EAAMQ,iBADS,SAGTvB,EAAQuE,UAAUvE,EAAQ8D,IAAI9D,EAAQ+D,eAAgB,SAApC,UAAiDZ,EAAMG,SAASU,KAAO,CAACT,KAAMC,IAHvF,OAIfH,GAAW,GAJI,2CAAH,sDAYd,OACE,qBAAKxB,UAAU,QAAf,SACGuB,EACC,mCACGD,EAAMqB,SACL,qCACE,uBAAMnD,SAAUA,EAAUQ,UAAU,sBAApC,UACE,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBb,MAAOsC,EAAUxB,UAAQ,EAAClB,SAbxE,SAACC,GAChB,IACWG,EACPH,EADFC,OAASE,MAEXuC,EAAYvC,IAS+FuD,WAAS,EAAC5C,UAAU,cACnH,uBAAOC,KAAK,SAASZ,MAAM,eAAeW,UAAU,eAEtD,sBAAMI,QAASqC,EAAezC,UAAU,oBAAxC,yBAON,qCACE,6BAAKsB,EAAMG,SAASC,OACnBJ,EAAMG,SAASW,eAAiB,qBAAKS,IAAKvB,EAAMG,SAASW,gBACzDd,EAAMqB,SACL,sBAAK3C,UAAU,iBAAf,UACE,sBAAMI,QAASyB,EAAf,SACE,cAAC,IAAD,CAAiBhB,KAAMiC,QAEzB,sBAAM1C,QAASqC,EAAf,SACE,cAAC,IAAD,CAAiB5B,KAAMkC,iB,QCoCxBC,EA1FM,SAAC1B,GACpB,MAA0B9C,mBAAS,IAAnC,mBAAOyE,EAAP,KAAcC,EAAd,KACA,EAAoC1E,mBAAS,IAA7C,mBAAO2E,EAAP,KAAmBC,EAAnB,KAEM5D,EAAQ,uCAAG,WAAON,GAAP,mBAAAO,EAAA,yDACD,KAAVwD,EADW,oDAIf/D,EAAMQ,iBACF0C,EAAgB,GACD,KAAfe,EANW,wBAOPE,EAAgBhF,EAAUiE,IAAIjE,EAAUkE,aAAxB,UAAyCjB,EAAMgC,QAAQC,IAAvD,YAA8DC,gBAPvE,SAQUnF,EAAUoF,aAAaJ,EAAeF,EAAY,YAR5D,cAQPO,EARO,iBASSrF,EAAUsF,eAAeD,EAASpB,KAT3C,QASbF,EATa,gCAWTjE,EAAQyF,OAAOzF,EAAQ0F,WAAW1F,EAAQ+D,eAAgB,UAAW,CACzER,KAAMuB,EACNa,UAAWC,KAAKC,MAChBC,UAAW3C,EAAMgC,QAAQC,IACzBnB,kBAfa,QAiBfc,EAAS,IACTE,EAAc,IAlBC,4CAAH,sDAiDd,OACE,uBAAM5D,SAAUA,EAAUQ,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBAAOA,UAAU,sBAAsBX,MAAO4D,EAAOhE,SA/B1C,SAACC,GAChB,IACWG,EACPH,EADFC,OAASE,MAEX6D,EAAS7D,IA2BoEY,KAAK,OAAOC,YAAY,uBAAuBgE,UAAW,MACnI,uBAAOjE,KAAK,SAASZ,MAAM,SAASW,UAAU,2BAEhD,wBAAOmE,IAAI,cAAcnE,UAAU,sBAAnC,UACE,8CACA,cAAC,IAAD,CAAiBa,KAAMuD,SAEzB,uBACEjC,GAAG,cACHlC,KAAK,OACLoE,OAAO,UACPpF,SAnCe,SAACC,GAEpB,IAGMoF,EADFpF,EADFC,OAASoF,MAEW,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACkBC,EACdD,EADFE,cAAgBD,OAElBtF,QAAQC,IAAIoF,GACZvB,EAAcwB,IAEhBJ,EAAOM,cAAcR,IAsBjBrD,MAAO,CACL8D,QAAS,KAGZ5B,GACC,sBAAKnD,UAAU,0BAAf,UACE,qBACE6C,IAAKM,EACL6B,IAAI,MACJ/D,MAAO,CACLgE,gBAAiB9B,KAGrB,sBAAKnD,UAAU,qBAAqBI,QAhClB,WACxBgD,EAAc,KA+BR,UACE,0CACA,cAAC,IAAD,CAAiBvC,KAAMqE,gBCtCpBC,EA9CF,SAAC7D,GACZ,MAA4B9C,mBAAS,IAArC,mBAAO4G,EAAP,KAAeC,EAAf,KAkCA,OApBAC,qBAAU,WAER,IAAMC,EAAIpH,EAAQqH,MAChBrH,EAAQ0F,WAAW1F,EAAQ+D,eAAgB,UAE3C/D,EAAQsH,QAAQ,YAAa,SAEXtH,EAAQuH,WAAWH,GAAG,SAACI,GACzC,IAAMC,EAAWD,EAAcE,KAAKC,KAAI,SAAC7D,GAEvC,OAAO,aACLE,GAAIF,EAAIE,IACLF,EAAIpC,WAGXwF,EAAUO,QAGX,IAGD,sBAAK5F,UAAU,YAAf,UACE,cAAC,EAAD,CAAcsD,QAAShC,EAAMgC,UAC7B,qBAAKrC,MAAO,CAAC8E,UAAW,IAAxB,SACGX,EAAOU,KAAI,SAACrE,GACX,OAAO,cAAC,EAAD,CAAyBA,SAAUA,EAAUkB,QAASlB,EAASwC,YAAc3C,EAAMgC,QAAQC,KAA/E9B,EAASU,aC+BvB6D,EAvEC,SAAC1E,GACf,MAAgC9C,mBAAS,IAAzC,mBAAOyH,EAAP,KAAiBC,EAAjB,KACA,EAA4C1H,mBAAS8C,EAAMgC,QAAQ6C,aAAnE,mBAAOC,EAAP,KAAuBC,EAAvB,KACMC,EAAUC,cAQVC,EAAW,uCAAG,4BAAA/G,EAAA,sDACZ8F,EAAIpH,EAAQqH,MAAMrH,EAAQ0F,WAAW1F,EAAQ+D,eAAgB,UAAW/D,EAAQsI,MAAM,YAAa,KAAMnF,EAAMgC,QAAQC,KAAMpF,EAAQsH,QAAQ,YAAa,SAC5ItH,EAAQuH,WAAWH,GAAG,SAACI,GACzC,IAAMC,EAAWD,EAAcE,KAAKC,KAAI,SAAC7D,GAEvC,OADA3C,QAAQC,IAAI0C,EAAIpC,QACT,aACLsC,GAAIF,EAAIE,IACLF,EAAIpC,WAGXqG,EAAYN,MAVI,2CAAH,qDAejBN,qBAAU,WACRkB,MACC,IAEH,IAOMhH,EAAQ,uCAAG,WAAON,GAAP,SAAAO,EAAA,yDACfP,EAAMQ,iBACF4B,EAAMgC,QAAQ6C,cAAgBC,EAFnB,gCAGPnI,EAAOyI,cAAczI,EAAO2B,UAAU+G,YAAa,CAACR,YAAaC,IAH1D,OAIb9E,EAAMsF,cAJO,2CAAH,sDAQd,OACE,sBAAK5G,UAAU,YAAf,UACE,uBAAMR,SAAUA,EAAUQ,UAAU,cAApC,UACE,uBAAOC,KAAK,OAAOC,YAAY,eAAejB,SAlBnC,SAACC,GAChB,IACWG,EACPH,EADFC,OAASE,MAEXgH,EAAkBhH,IAcoDA,MAAO+G,EAAgBxD,WAAS,EAAC5C,UAAU,cAC7G,uBACEC,KAAK,SACLZ,MAAM,iBACNW,UAAU,UACViB,MAAO,CACL8E,UAAW,SAIjB,2CACA,sBAAM/F,UAAU,2BAA2BI,QAtDzB,WACpBnC,EAAO2B,UAAUiH,UACjBP,EAAQQ,KAAK,KACbxF,EAAMsF,eAmDJ,qBAGA,8BACGX,EAASH,KAAI,SAACrE,GACb,OAAO,cAAC,EAAD,CAAyBA,SAAUA,EAAUkB,QAASlB,EAASwC,YAAc3C,EAAMgC,QAAQC,KAA/E9B,EAASU,aCnCvB4E,EA5BI,SAACzF,GAClB,OACE,8BACE,qBAAIL,MAAO,CAAC+F,QAAS,OAAQC,eAAgB,SAAUlB,UAAW,IAAlE,UACE,6BACE,cAAC,IAAD,CAAMmB,GAAG,IAAIjG,MAAO,CAACkG,YAAa,IAAlC,SACE,cAAC,IAAD,CAAiBtG,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACE,eAAC,IAAD,CACEkG,GAAG,WACHjG,MAAO,CACLmG,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiB1G,KAAM2G,IAAQzG,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAC8E,UAAW,IAAzB,SAA+BzE,EAAMgC,QAAQ6C,YAAd,UAA+B7E,EAAMgC,QAAQ6C,YAA7C,kBAAsE,uBCalGsB,EAjCG,SAACnG,GACjB,OACE,eAAC,IAAD,WACGA,EAAMoG,YAAc,cAAC,EAAD,CAAYpE,QAAShC,EAAMgC,UAChD,cAAC,IAAD,UACGhC,EAAMoG,WACL,sBACEzG,MAAO,CACL0G,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR9B,UAAW,GACXiB,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMzE,QAAShC,EAAMgC,YAEvB,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASzE,QAAShC,EAAMgC,QAASsD,YAAatF,EAAMsF,mBAIxD,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCiBGC,MA7Cf,WAEE,MAAwBxJ,oBAAS,GAAjC,mBAAOyJ,EAAP,KAAaC,EAAb,KACA,EAAoC1J,mBAASP,EAAO2B,UAAU+G,aAA9D,mBAAOe,EAAP,KAAmBS,EAAnB,KACA,EAA8B3J,mBAAS,MAAvC,mBAAO8E,EAAP,KAAgB8E,EAAhB,KAsCA,OApCA9C,qBAAU,WACR,IAAMoB,EAAa,uCAAG,WAAO2B,GAAP,iBAAA5I,EAAA,yDACK,OAArB4I,EAAKlC,aAA6C,KAArBkC,EAAKlC,YADlB,uBAEZmC,EAAMD,EAAK5J,MAAM8J,QAAQ,KACzBC,EAAMH,EAAK5J,MAAMgK,UAAU,EAAGH,GAHlB,SAIZrK,EAAOyI,cAAc2B,EAAM,CAAClC,YAAaqC,IAJ7B,2CAAH,sDAQnBvK,EAAO2B,UAAU8I,mBAAjB,uCAAoC,WAAOL,GAAP,SAAA5I,EAAA,0DAC9B4I,EAD8B,gCAE1B3B,EAAc2B,GAFY,OAGhCF,GAAc,GACdC,EAAW,CACTjC,YAAakC,EAAKlC,YAClB5C,IAAK8E,EAAK9E,MANoB,sBAUhC4E,GAAc,GACdC,EAAW,MAXqB,OAclCF,GAAQ,GAd0B,4CAApC,yDAgBC,IAWI,mCAAGD,EAAO,cAAC,EAAD,CAAWP,WAAYA,EAAYpE,QAASA,EAASsD,YATlD,WAClB,IAAMyB,EAAOpK,EAAO2B,UAAU+G,YAC9ByB,EAAW,CACTjC,YAAakC,EAAKlC,YAClB5C,IAAK8E,EAAK9E,SAKiG,oB,MCxCjHjE,QAAQC,IAAI,YACZD,QAAQC,IAAI/B,GAEZmL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6843638e.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport * as firebaseAuth from 'firebase/auth';\nimport * as firestore from 'firebase/firestore';\nimport * as fireStorage from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  // apiKey: 'AIzaSyAeCcG1YDmulX-lZW2WQMk1T819L6TMXzU',\n  // authDomain: 'ntwitter-ca13b.firebaseapp.com',\n  // projectId: 'ntwitter-ca13b',\n  // storageBucket: 'ntwitter-ca13b.appspot.com',\n  // messagingSenderId: '185385454697',\n  // appId: '1:185385454697:web:3478f16d251f49a1fda6f8',\n};\n\nexport const firebaseInstance = firebase.initializeApp(firebaseConfig);\nexport const fbAuth = firebaseAuth;\nexport const fbStore = firestore;\nexport const fbStorage = fireStorage;\n// export const authService = getAuth();\n","import React, {useState} from 'react';\nimport {fbAuth} from '../fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: {name, value},\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n      console.log('email');\n    } else if (name === 'password') {\n      setPassword(value);\n      console.log('password');\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await fbAuth.createUserWithEmailAndPassword(fbAuth.getAuth(), email, password);\n      } else {\n        data = await fbAuth.signInWithEmailAndPassword(fbAuth.getAuth(), email, password);\n      }\n      console.log('In Auth.js > onSubmit()');\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Log In'} className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Log In' : 'Sign in'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport {fbAuth} from '../fbase';\nimport AuthForm from '../components/AuthForm';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTwitter, faGoogle, faGithub} from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const auth = fbAuth.getAuth();\n    const {\n      target: {name},\n    } = event;\n    let provider;\n    if (name === 'google') {\n      // console.log('google');\n      provider = new fbAuth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      // console.log('github');\n      provider = new fbAuth.GithubAuthProvider();\n    }\n    const data = await fbAuth.signInWithPopup(auth, provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"3x\" style={{marginBottom: 30}} />\n      <AuthForm></AuthForm>\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, {useState} from 'react';\nimport {fbStore} from '../fbase';\nimport {fbStorage} from '../fbase';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTrash, faPencilAlt} from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = (props) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(props.nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n    if (ok) {\n      await fbStore.deleteDoc(fbStore.doc(fbStore.getFirestore(), 'nweets', `${props.nweetObj.id}`));\n      if (props.nweetObj.attachmentUrl !== '') {\n        const stgRef = fbStorage.ref(fbStorage.getStorage(), props.nweetObj.attachmentUrl);\n        await fbStorage.deleteObject(stgRef);\n      }\n    }\n  };\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // console.log(newNweet);\n    await fbStore.updateDoc(fbStore.doc(fbStore.getFirestore(), 'nweets', `${props.nweetObj.id}`), {text: newNweet});\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {props.isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required onChange={onChange} autoFocus className=\"formInput\" />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{props.nweetObj.text}</h4>\n          {props.nweetObj.attachmentUrl && <img src={props.nweetObj.attachmentUrl} />}\n          {props.isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, {useState} from 'react';\nimport {fbStore, fbStorage} from '../fbase';\nimport {v4 as uuidv4} from 'uuid';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus, faTimes} from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = (props) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = fbStorage.ref(fbStorage.getStorage(), `${props.userObj.uid}/${uuidv4()}`);\n      const response = await fbStorage.uploadString(attachmentRef, attachment, 'data_url');\n      attachmentUrl = await fbStorage.getDownloadURL(response.ref);\n    }\n    await fbStore.addDoc(fbStore.collection(fbStore.getFirestore(), 'nweets'), {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: props.userObj.uid,\n      attachmentUrl,\n    });\n    setNweet('');\n    setAttachment('');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    // console.log(event.target.files);\n    const {\n      target: {files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result},\n      } = finishedEvent;\n      console.log(finishedEvent);\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment('');\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt=\"fig\"\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import React, {useState, useEffect} from 'react';\nimport {fbStore} from '../fbase';\nimport Nweet from '../components/Nweet';\nimport NweetFactory from '../components/NweetFactory';\n\nconst Home = (props) => {\n  const [nweets, setNweets] = useState([]);\n  /*const getNweets = async () => {\n    // 특정 collection 이름을 가지고 docs 가져오기\n    const dbNweets = await fbStore.getDocs(fbStore.collection(fbStore.getFirestore(), 'nweets'));\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets((prev) => [nweetObject, ...prev]);\n      // console.log(document.data())\n    });\n    console.log(dbNweets);\n  };*/\n  useEffect(() => {\n    // getNweets();\n    const q = fbStore.query(\n      fbStore.collection(fbStore.getFirestore(), 'nweets'),\n      // fbStore.where('text' '==', 'hehe')\n      fbStore.orderBy('createdAt', 'desc')\n    );\n    const unsubscribe = fbStore.onSnapshot(q, (querySnapshot) => {\n      const newArray = querySnapshot.docs.map((doc) => {\n        // console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(newArray);\n      // console.log('Current nweets in CA: ', newArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={props.userObj}></NweetFactory>\n      <div style={{marginTop: 30}}>\n        {nweets.map((nweetObj) => {\n          return <Nweet key={nweetObj.id} nweetObj={nweetObj} isOwner={nweetObj.creatorId === props.userObj.uid}></Nweet>;\n        })}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport {fbAuth, fbStore} from '../fbase';\nimport {useHistory} from 'react-router-dom';\nimport Nweet from '../components/Nweet';\n\nconst Profile = (props) => {\n  const [myNweets, setMyNweets] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(props.userObj.displayName);\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    fbAuth.getAuth().signOut();\n    history.push('/');\n    props.refreshUser();\n  };\n\n  const getMyNweets = async () => {\n    const q = fbStore.query(fbStore.collection(fbStore.getFirestore(), 'nweets'), fbStore.where('creatorId', '==', props.userObj.uid), fbStore.orderBy('createdAt', 'desc'));\n    const unsubscribe = fbStore.onSnapshot(q, (querySnapshot) => {\n      const newArray = querySnapshot.docs.map((doc) => {\n        console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setMyNweets(newArray);\n      // console.log('Current nweets in CA: ', newArray);\n    });\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (props.userObj.displayName !== newDisplayName) {\n      await fbAuth.updateProfile(fbAuth.getAuth().currentUser, {displayName: newDisplayName});\n      props.refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span>Profile</span>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n      <div>\n        {myNweets.map((nweetObj) => {\n          return <Nweet key={nweetObj.id} nweetObj={nweetObj} isOwner={nweetObj.creatorId === props.userObj.uid}></Nweet>;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTwitter} from '@fortawesome/free-brands-svg-icons';\nimport {faUser} from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = (props) => {\n  return (\n    <nav>\n      <ul style={{display: 'flex', justifyContent: 'center', marginTop: 50}}>\n        <li>\n          <Link to=\"/\" style={{marginRight: 10}}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{marginTop: 10}}>{props.userObj.displayName ? `${props.userObj.displayName}의 Profile` : 'Profile'}</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\nexport default Navigation;\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = (props) => {\n  return (\n    <Router>\n      {props.isLoggedIn && <Navigation userObj={props.userObj} />}\n      <Switch>\n        {props.isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={props.userObj}></Home>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={props.userObj} refreshUser={props.refreshUser}></Profile>\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth></Auth>\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, {useEffect, useState} from 'react';\nimport AppRouter from './Router';\nimport {fbAuth} from '../fbase';\n\nfunction App() {\n  // console.log('App()');\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(fbAuth.getAuth().currentUser);\n  const [userObj, setUserObj] = useState(null);\n  // console.log(authService.currentUser);\n  useEffect(() => {\n    const updateProfile = async (user) => {\n      if (user.displayName === null || user.displayName === '') {\n        const ind = user.email.indexOf('@');\n        const end = user.email.substring(0, ind);\n        await fbAuth.updateProfile(user, {displayName: end});\n      }\n    };\n\n    fbAuth.getAuth().onAuthStateChanged(async (user) => {\n      if (user) {\n        await updateProfile(user);\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          // updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      // console.log(user);\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = fbAuth.getAuth().currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      // updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return <>{init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}></AppRouter> : 'Initializing..'}</>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {firebaseInstance} from './fbase';\nimport './styles.css';\n\nconsole.log('index.js');\nconsole.log(firebaseInstance);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}